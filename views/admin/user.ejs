<style>
  .admin-customers-container {
    min-height: 100vh;
    background-color: black;
    /* added for sidebar */

    margin-top: 2rem;

    margin-left: 200px;
    /* Width of sidebar */
    padding: 1rem;
    /* Add padding for spacing */
    padding-bottom: 7rem;
  }

  .user-search-box {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 3rem 0;
  }

  .admin-user-search-box {
    border: 1px solid white;
    border-radius: 10px;
    padding: 0.2rem 0.3rem;
    margin-top: 2rem;
    background-color: #e4dada;
  }

  #user-search {
    border: none;
    outline: none;
    width: 30rem;
    height: 2.5rem;
  }

  table th,
  td {
    text-align: center;
  }
</style>

<%- include('navbar') %> <%- include('sidebar') %>

<div class="admin-customers-container container">
  <div class="user-search-box">
    <h3 class="text-white mt-4">Customers</h3>
    <form action="/admin/user" method="get" class="admin-user-search-box">
      <input
        type="text"
        name="userSearch"
        id="user-search"
        placeholder="Find users"
      />
      <button class="btn"><i class="fa-solid fa-magnifying-glass"></i></button>
    </form>
  </div>
  <div class="user-list-box">
    <table class="table table-hover">
      <thead>
        <tr>
          <th scope="col">sl.no</th>
          <th scope="col">Name</th>
          <th scope="col">Email Address</th>
          <th scope="col">Phone Number</th>
          <th scope="col">Address</th>
          <th scope="col">Actions</th>
        </tr>
      </thead>
      <tbody>
        <% users.forEach((user,index)=>{%>
        <tr>
          <th scope="row"><%= index+1 %></th>
          <td><%= user.name %></td>
          <td><%= user.email %></td>
          <td><%= user.number %></td>
          <td><%= user.address?"user.address":"--- no address --- " %></td>
          <td>
            <% if(user.isBlocked){%>

           <button
              class="btn btn-warning user-action-btn"
              data-id="<%= user._id %>"
              data-action="unblock"
            >
              Unblock
            </button>
            <% } else { %>
            <button
              class="btn btn-danger user-action-btn"
              data-id="<%= user._id %>"
              data-action="block"
            >
              Block
            </button>

            <% } %>
          </td>
        </tr>
        <% })%>
      </tbody>
    </table>
  </div>
  <%- include('pagination') %>
</div>

<%- include('footer') %>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const userTable = document.querySelector('.user-list-box');

    userTable.addEventListener('click', async (e) => {
      const button = e.target.closest('.user-action-btn');
      if (!button) return;

      const userId = button.dataset.id;
      const action = button.dataset.action;

      // Show confirmation Swal before proceeding
      const result = await Swal.fire({
        title: `Are you sure you want to ${action} this user?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${action}`,
        cancelButtonText: 'Cancel'
      });

      if (!result.isConfirmed) return;

      try {
        const response = await fetch(`/admin/${action}-user/${userId}`, {
          method: 'GET'
        });

        if (response.ok) {
          // Update button and show success swal
          if (action === 'block') {
            button.textContent = 'Unblock';
            button.dataset.action = 'unblock';
            button.classList.remove('btn-danger');
            button.classList.add('btn-warning');

            Swal.fire({
              icon: 'success',
              title: 'Blocked',
              text: 'User has been blocked.',
              timer: 1500,
              showConfirmButton: false
            });
          } else {
            button.textContent = 'Block';
            button.dataset.action = 'block';
            button.classList.remove('btn-warning');
            button.classList.add('btn-danger');

            Swal.fire({
              icon: 'success',
              title: 'Unblocked',
              text: 'User has been unblocked.',
              timer: 1500,
              showConfirmButton: false
            });
          }
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Oops!',
            text: 'Action failed. Try again.'
          });
        }
      } catch (err) {
        console.error('Error:', err);
        Swal.fire({
          icon: 'error',
          title: 'Server Error',
          text: 'Something went wrong.'
        });
      }
    });
  });
</script>


