<style>
    .add-product-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-content: center;
        min-height: 100vh;
        color: rgb(182, 177, 177);
    }

    .add-product-container form {
        margin-bottom: 5rem;
    }

    .product-form-top {
        display: flex;
        flex-direction: row;
        margin-bottom: 3rem;
        flex-wrap: wrap;

    }

    .product-form-bottom {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        gap: 3rem;

    }

    .product-form-left {
        display: flex;
        flex-direction: column;
        width: 50%;
        margin-top: 3rem;
        align-items: center;
    }

    .product-form-right {
        display: flex;
        flex-direction: column;
        width: 50%;
        margin-top: 3rem;
        align-items: center;
    }

    .product-form-left input,
    .product-form-right input {
        border: 1px solid #c5c5c5;
        outline: none;
        padding: 10px;
        border-radius: 10px;
        width: 90%;
        margin-bottom: 1rem;
    }

    .product-form-left label,
    .product-form-right label {
        width: 90%;
    }

    .product-form-left input[name="productName"],
    [name="productCategory"] {
        background-color: #e7e1e1;
    }

    .product-form-right input[name="productAuthor"] {
        background-color: #e7e1e1;
    }

    /* remove the increment and decrement arrows in input type number */
    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    #product-description {
        border: 1px solid #c5c5c5;
        outline: none;
        padding: 10px;
        width: 90%;
        border-radius: 10px;
        resize: vertical;
        min-height: 200px;
    }



    #product-category {
        border: 1px solid #c5c5c5;
        outline: none;
        padding: 10px;
        border-radius: 10px;
        width: 90%;
    }

    #product-image-preview {
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        flex-wrap: wrap;
        width: 90%;
    }

    .product-image-box {
        display: flex;
        flex-direction: column;
        border: 1px solid #c5c5c5;
        border-radius: 10px;
        overflow: hidden;
        background-color: white;

    }

    .preview-img {
        width: 200px;
        height: 200px;
        object-fit: scale-down;
    }

    

    .delete-button {
        background-color: #c30606;
        padding: 10px;
        color: #ffffff;
        font-weight: 600;
        border: none;
        outline: none;
    }

    .btn {
        min-width: 150px;
    }

   

    #cropper-modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1050;
    max-width: 500px;
    width: 100%;
    max-height: 600px;
    background: white;
    box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
    padding: 20px;
    border-radius: 8px;
    overflow: hidden;
}

    #cropper-container {
        background: white;
        padding: 1rem;
        border-radius: 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    #cropper-image {
        max-width: 100%;
        max-height: 70vh;
    }

    #cropper-buttons {
        margin-top: 1rem;
        display: flex;
        gap: 1rem;
    }
</style>



<%- include('navbar') %>


    <div class="add-product-container container">
        <div class="product-header mt-5">
            <h2 class="text-center">Edit Product</h2>
        </div>

        <!--  form action is set with product id to update the product details based on the id -->
        <form action="/admin/edit-product/<%= product.id %>" method="post" enctype="multipart/form-data"
            id="add-product-form">

            <div class="product-form-top">

                <div class="product-form-left">

                    <!-- input for product name -->
                    <label for="productName">Product Name</label>
                    <input type="text" name="productName" minlength="3" maxlength="100"
                        value="<%= product.productName %>"readonly>

                    <!-- input for product price -->
                    <label for="productPrice">Product Price</label>
                    <input type="number" name="productPrice" min="1" max="100000" value="<%= product.productPrice %>"
                        required>

                    <!-- input for product quantity -->
                    <label for="productQuantity">Product Quantity</label>
                    <input type="number" name="productQuantity" min="0" max="100000"
                        value="<%= product.productQuantity %>" required>

                    <!-- input for product discount -->
                    <!-- <label for="productDiscount">Product Discount in percentage</label>
                    <input type="number" name="productDiscount" min="0" max="100" value="<%= product.productDiscount %>"
                        required> -->

                    <!-- input for select category this category is from backend -->
                    <label for="productCategory">Product Category </label>
                    <select name="productCategory" id="product-category" disabled required>
                        <option value="" selected disabled>
                            <%= product.productCategory %>
                        </option>
                    </select>

                </div>
                <div class="product-form-right">

                    <label for="productAuthor">Product Author</label>
                    <input type="text" name="productAuthor" minlength="3" maxlength="30"
                        value="<%=product.productAuthor %>" readonly>
                    <!-- input for product description -->
                    <label for="productDescription">Product Description</label>
                    <textarea name="productDescription" id="product-description" minlength="10" maxlength="500"
                        required><%= product.productDescription %></textarea>

                </div>
            </div>




            <div class="product-form-bottom">

                <!-- input file for image upload but the button is display is set as none -->

                <!-- using the label the image is uploaded -->
                <a onclick="addImage()"><label for="product-image-upload" class="btn btn-warning">
                        <i class="fas fa-upload"></i> &nbsp; Choose Image
                    </label></a>



                <div id="add-input"></div>


                <div id="product-image-preview">
                    <% product.productImage.forEach((img, index)=> { %>
                        <div class="product-image-box" data-image-path="<%= img%>">
                            <img src="../../<%= img %>" alt="" class="preview-img">
                            <a class="btn btn-danger"
                                onclick="deleteImage(`<%= img.replace(/\\/g,'\\\\') %>`)">Delete</a>
                        </div>
                        <% }) %>
                </div>





                <!-- the form submission and cancel buttons -->
                <div>
                    <a href="/admin/product" class="btn btn-secondary">Cancel</a>
                    <button class="btn btn-success" type="submit">Save changes</button>
                </div>



            </div>



        
            <input type="hidden" name="deletedImages" id="deletedImages">

<!-- for cropper in edit -->

             <input type="hidden" name="croppedImages" id="croppedImages">
        </form>
    </div>


<!-- Modal for Cropper -->
<div id="cropper-modal" style="display: none;">
    <div id="cropper-container">
        <img id="cropper-image">
        <div id="cropper-buttons">
            <button id="crop-cancel" class="btn btn-secondary">Cancel</button>
            <button id="crop-confirm" class="btn btn-primary">Crop</button>
        </div>
    </div>
</div>



    <script>
        const addProductForm = document.getElementById('add-product-form')
        const productName = document.getElementsByName('productName')[0];
        const productPrice = document.getElementsByName('productPrice')[0];
        const productQuantity = document.getElementsByName('productQuantity')[0];
        const productAuthor = document.getElementsByName('productAuthor')[0];
        const productDiscount = document.getElementsByName('productDiscount')[0];
        const productDescription = document.getElementsByName('productDescription')[0];
        const productCategory = document.getElementsByName('productCategory')[0];


        addProductForm.addEventListener('submit', (e) => {
            e.preventDefault()



            let isValid = true
            let errorMessage = ""


            if (isNaN(productPrice.value) || parseFloat(productPrice.value) <= 0) {
                errorMessage = 'Product Price must be greater than zero and it should not contain any alphabets'
                isValid = false;
            }

            if (isNaN(productQuantity.value) || parseInt(productQuantity.value) < 0) {
                errorMessage = 'Product quality should be a number and it must be greater than zero'
                isValid = false;
            }



            // if (isNaN(productDiscount.value) || parseInt(productDiscount.value) < 0 || parseInt(productDiscount.value) > 100) {
            //     errorMessage = 'Product quality should be a number and it must be greater than zero'
            //     isValid = false;
            // }



            if (productDescription.value.length <= 10 || productDescription.value.length > 500 || productDescription.value.trim === "") {
                errorMessage = 'Product description must be between 10 to 80 word '
                isValid = false
            }

            if (isValid === false) {
                Swal.fire({
                    title: "Invalid Inputs",
                    text: errorMessage,
                    icon: "error"
                })
            } else {
                addProductForm.submit()
            }
        });

       
        let deletedImages = [];

function deleteImage(imagePath) {
    deletedImages.push(imagePath);
    document.getElementById('deletedImages').value = JSON.stringify(deletedImages);
    const imageBox = document.querySelector(`div[data-image-path="${imagePath.replace(/\\/g, '\\\\')}"]`);
    if (imageBox) {
        imageBox.remove();
    }
}

function addImage() {
    const inputDiv = document.getElementById('add-input');
    const newInput = document.createElement('input');
    newInput.type = 'file';
    newInput.name = 'productImage';
    newInput.style.display = 'none';

    newInput.addEventListener('change', (event) => {
        if (event.target.files && event.target.files[0]) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const cropperImage = document.getElementById('cropper-image');
                cropperImage.src = e.target.result;

                openCropperModal(cropperImage, newInput);
            };
            reader.readAsDataURL(event.target.files[0]);
        }
    });

    inputDiv.appendChild(newInput);
    newInput.click();
}

function openCropperModal(imageElement, inputElement) {
    const cropperModal = document.getElementById('cropper-modal');
    cropperModal.style.display = 'block';

    const cropper = new Cropper(imageElement, {
                                aspectRatio: 0,
                                viewMode: 0,
                                autoCropArea: 1
    });

    document.getElementById('crop-cancel').addEventListener('click', () => {
        cropper.destroy();
        cropperModal.style.display = 'none';
        inputElement.value = ''; // Clear the input value
    });

    document.getElementById('crop-confirm').addEventListener('click', () => {
        const canvas = cropper.getCroppedCanvas();
        imageElement.src = canvas.toDataURL('image/jpeg');
        cropper.destroy();
        cropperModal.style.display = 'none';

        const previewDiv = document.getElementById('product-image-preview');
        const imageBox = document.createElement('div');
        imageBox.className = 'product-image-box';

        const img = document.createElement('img');
        img.classList.add('preview-img');
        img.src = imageElement.src;

        let deleteImage = document.createElement('button');
        deleteImage.textContent = 'Delete';
        deleteImage.classList.add('btn', 'btn-danger');
        deleteImage.addEventListener('click', (e) => {
            imageBox.remove();
            inputElement.remove();
        });

        imageBox.appendChild(img);
        imageBox.appendChild(deleteImage);
        previewDiv.appendChild(imageBox);

        const croppedImages = JSON.parse(document.getElementById('croppedImages').value || '[]');
        croppedImages.push(canvas.toDataURL('image/jpeg'));
        document.getElementById('croppedImages').value = JSON.stringify(croppedImages);
    });
}
    </script>