<style>
    body {
        background-color: black;
    }

    .prdocut-container {
        padding: 2rem, 0;
        margin-bottom: 5rem;
    }

    .product-container h2 {
        display: flex;
        justify-content: center;
        margin-top: 4rem;
        font-family: 'Times New Roman', Times, serif;
        font-style: italic;
        text-decoration: underline;

        color: rgb(162, 218, 33);
    }

    .product-category-container {
        display: flex;
        justify-content: space-around;
        font-family: "Roboto", sans-serif;
        flex-wrap: wrap;
        gap: 2rem;


    }

    .product-category-container a {
        cursor: pointer;
        transition: .3s ease-in-out;
        text-decoration: none;
        color: aqua;

    }

    .product-category-container a :hover {
        scale: 1.1;
    }

    .product-list-box {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-around;

    }

    .product-box {
        /* text-decoration: none; */
        border: 1px solid #b2b2b2;
        border-radius: 10px;
        width: 300px;
        margin-top: 2rem;
        overflow: hidden;
        text-overflow: ellipsis;
        position: relative;


    }


    .product-image-box {
        height: 290px;
        width: 290px;
    }

    .product-image-box img {
        margin: auto;
        width: 250px;
        height: 290px;
        object-fit: scale-down;


    }


    .product-text-row {
        max-width: 250px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .product-name-box {
        color: white;
        margin-left: 4rem;


    }

    .product-name-link {
        text-decoration: none;
        color: white;

    }

    .product-discount-box {
        position: absolute;
        top: 0;
        left: 0;
        padding: 0 2rem;
        color: #0f0f0f;
        background-color: rgb(36, 189, 36);
        border-radius: 5px 0;
    }

    .product-newArrival-box {
        position: absolute;
        top: 0;
        left: 0;
        padding: 0 2rem;
        color: #ffffff;
        background-color: rgb(50, 195, 50);
        border-radius: 5px 0;
    }

    .product-price {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: .5rem;
    }

    /* Breadcrumb navigation styles */
    .breadcrumbs {
        margin: 20px 0;
        /* Adjust margin as needed */
        font-size: 16px;
        /* Adjust font size as needed */
    }

    .breadcrumbs ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
        display: flex;
    }

    .breadcrumbs li {
        display: inline;
        margin-right: 10px;
        /* Adjust spacing between breadcrumb items */
    }

    .breadcrumbs li:last-child {
        font-weight: bold;
        /* Make the last breadcrumb item bold */
    }

    .breadcrumbs a {
        text-decoration: none;
        color: white;
        /* Link color */
    }

    .breadcrumbs span {
        color: white;
    }

    .breadcrumbs a:hover {
        text-decoration: underline;
        color: rgb(75, 75, 172);
        /* Underline on hover */
    }

    /* Style for the current page (last breadcrumb item) */
    .breadcrumbs span {
        font-weight: bold;
    }

    .wishlist-icon {
        font-size: 24px;
        color: #e4d9d9;
        margin-left: 10rem;
        padding-left: 3rem;

    }

    .cart-icon {
        font-size: 24px;
        color: #e4d9d9;
        margin-left: 1rem;
    }

    .product-availability {
        position: absolute;
        top: 40%;
        left: 0;
        width: 100%;
        background-color: rgba(255, 255, 255, 0.499);
        padding: 1rem 0;
        font-size: 1.5rem;
        font-weight: 700;
        color: red;
        text-align: center;
        z-index: 200;
    }

    .no-product-banner {
        /* background-color: red; */
        background: url("../../image/no-product.jpg");
        background-position: center;
        background-size: contain;
        background-repeat: no-repeat;
        height: 50vh;
        width: 100%;
    }


    .heart-fill {
        color: red;
    }

    .heart {
        color: white;
    }


    .filter-sort-container {
    padding: 20px 0;
    background-color: black;
    border-radius: 5px;
    margin-bottom: 20px;
    color: #e6e1e1;
}

/* Label Styling */
.filter-sort-container .form-label {
    font-weight: bold;
    margin-bottom: 10px;
    display: block;
}

/* Select Styling */
.filter-sort-container .form-select {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ced4da;
    border-radius: 5px;
    background-color: #e6dfdf;
    transition: border-color 0.2s ease-in-out;
}

/* Select Hover and Focus Effects */
.filter-sort-container .form-select:hover,
.filter-sort-container .form-select:focus {
    border-color: #80bdff;
    outline: none;
}

/* Row Styling */
.filter-sort-container .row {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* Column Styling */
.filter-sort-container .col-md-6 {
    display: flex;
    flex-direction: column;
    margin-bottom: 10px;
}

/* // now added */

.filter-btn{
        position: relative;
    }

.filter-panel {
    position: absolute;
    top: 220px; /* Adjusted to position right under the filter button */
    left: 120px;
    z-index: 1000;
    width: 400px;
    display: none;
    background-color: white;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    padding: 15px;
}

.close-icon {
    position: absolute;
    top: 10px;
    right: 10px;
    cursor: pointer;
}

.selected-filters {
    margin-top: 15px;
}


        .selected-filters .badge {
            margin-right: 5px;
        }


    /* Responsive adjustments */
    @media (max-width: 576px) {
        .product-container h2 {
            font-size: 1.5rem;
            margin-top: 2rem;
        }

        .product-box {
            width: 90%;
            margin: 1rem auto;
        }

        .product-image-box {
            height: 200px;
            width: 200px;
        }

        .product-text-row {
            max-width: 200px;
        }

        .product-discount-box,
        .product-newarrival-box {
            padding: 0 0.5rem;
            font-size: 0.8rem;
        }
    }
    @media (max-width: 768px) {
    .filter-sort-container .row {
        flex-direction: column;
    }
    .filter-sort-container .col-md-6 {
        width: 100%;
    }
}
</style>
<%-include ('navbar') %>

    <nav class="breadcrumbs">
        <ul>
            <li><a href="/">Home</a></li>
            <span>/</span>
            <li><a href="/product">productSeemore</a></li>


        </ul>
    </nav>

    <div class="product-container">

        <h2 class="product-book">BOOKS</h2>


       

        <div class="">
            <div class="text-center nav-explore-background">
                <!-- <h1 class="mb-2">ALL COLLECTION</h1> -->
                <div class="d-flex justify-content-between">
                    <button class="btn btn-primary" id="filter-btn">Filter</button>
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            Sort by
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                            <li><a class="dropdown-item" href="#" onclick="applySort('price-high-low')">Price: High to Low</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySort('price-low-high')">Price: Low to High</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySort('latest')">Latest Arrival</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySort('a-z')">A-Z</a></li>
                            <li><a class="dropdown-item" href="#" onclick="applySort('z-a')">Z-A</a></li>
                        </ul>
                    </div>
                </div>
                <hr>
            </div>
        </div>
    
        <div class="filter-panel" id="filter-panel">
            <span class="close-icon" id="close-filter-panel">&times;</span> <!-- Close icon -->
            <form id="filter-form" method="get" action="/user/productSeemore" >
                <div class="mb-3">
                    <label class="form-label">Category</label>
                    <div>
                        <input class="form-check-input" type="checkbox" name="collections" value="Best Seller"> Best Sellers<br>
                        <input class="form-check-input" type="checkbox" name="collections" value="Fiction"> Fiction<br>
                        <input class="form-check-input" type="checkbox" name="collections" value="Non-Fiction"> Non-Fiction<br>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Price Range</label>
                    <div>
                        <input class="form-control" type="text" class="form-control" placeholder="Min Price" name="minPrice">
                        <input class="form-control" type="text" class="form-control" placeholder="Max Price" name="maxPrice">
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Ratings</label>
                    <div>
                        <input class="form-check-input" type="checkbox" name="ratings" value="1"> 1 Star<br>
                        <input class="form-check-input" type="checkbox" name="ratings" value="2"> 2 Stars<br>
                        <input class="form-check-input" type="checkbox" name="ratings" value="3"> 3 Stars<br>
                        <input class="form-check-input" type="checkbox" name="ratings" value="4"> 4 Stars<br>
                        <input class="form-check-input" type="checkbox" name="ratings" value="5"> 5 Stars<br>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Availability</label>
                    <div>
                        <input class="form-check-input" type="checkbox" name="availability" value="in-stock"> In Stock<br>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" id="apply-filters">Apply Filters</button>
            </form>
        </div>


        <div class="product-list-box container">

            <% if(product.length!=0){ %>
                <% product.forEach((product)=>{ %>


                    <div class="product-box">

                        <% if(product.productDiscount!=0) {%>
                            <div class="product-discount-box">
                                <h6>
                                    <%= product.productDiscount %> &percnt; OFF
                                </h6>
                            </div>
                            <% } else if(new Date(product.addedOn).getTime()>(Date.now() - (1 * 24 * 60 * 60 * 1000)))
                                {%>

                                <div class="product-newarrival-box">
                                    <h6>New Arrival</h6>
                                </div>
                                <% } %>


                                    <div class="product-image-box" >
                                        <img src="/<%=product.productImage[0] %>" alt="">
                                    </div>

                                    <div class="product-name-box">
                                        <a href="/user/product-view/<%=product.id %>" class="product-name-link">
                                            <h6 class="product-text-row">
                                                <%=product.productName%>
                                            </h6>
                                            <p class="product-description product-text-row">
                                                <%=product.productAuthor %>

                                            </p>
                                            <h5 class="product-price"><i
                                                    class="fa-solid fa-indian-rupee-sign product-text-row"></i>
                                                <%=product.productPrice.toLocaleString() %>
                                            </h5>
                                        </a>
                                    </div>

                                    <div>

                                        <div class="d-flex flex-row-reverse gap-3">
                                            <% if(user && wishlist.products.some(item=>item.productId.equals(product.id) ))
                                                { %>
    
                                                <a class="wishlist-icon" id="wishlist-heart">
                                                    <i class="fas fa-heart heart-fill"
                                                        onclick="addToWishlist('<%= product.id %>', '<%= user %>', this)"></i>
                                                </a>
    
                                                <% } else { %>
                                                    <a class="wishlist-icon" id="wishlist-heart">
                                                        <i class="fas fa-heart heart"
                                                            onclick="addToWishlist('<%= product.id %>', '<%= user %>', this)"></i>
                                                    </a>
                                                    <% } %>
    
    
    
                                                        <!-- Cart Icon -->
                                                        <a onclick="addToCart('<%= product.id %>','<%= product.productPrice %>','<%=user %>')"
                                                            class="cart-icon"><i class="fas fa-shopping-cart"></i></a>
                                        </div>
                                        <!-- product availability -->
                                        <% if(product.productQuantity<=0){ %>
                                            <h6 class="product-availability">Product Out of stock</h6>
                                            <% } %>

                                    </div>



                    </div>

                    <% }) %>
                        <% }else{ %>
                            <div class="no-product-banner"></div>
                            <% } %>
        </div>
     
    </div>


    <script>
        // add tocart from icon

        async function addToCart(productId, price, user) {


            const URL = `/user/add-to-cart/${productId}/?price=${price}`;

            try {
                if (user) {
                    const response = await fetch(URL, {
                        method: "GET",
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        const data = await response.json();
                        Swal.fire({
                            icon: "success",
                            title: data.message || "Product added to cart",
                            showConfirmButton: false,
                            timer: 700,
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        const errorData = await response.json();
                        throw new Error(errorData.error || "Failed to add product to cart");
                    }
                }

                else {
                    Swal.fire({
                        icon: "warning",
                        title: "Not logged in",
                        text: "Please log in to add products to cart"
                    });
                }
            } catch (err) {
                Swal.fire({
                    icon: "warning",
                    title: "Cannot add product to cart",
                    text: err.message
                });
            }
        }


        //  add to wish list


        async function addToWishlist(productId, user, wishlistIcon) {
        const URL = `/user/addtowishlist`;

        try {
            if (user) {
                const response = await fetch(URL, {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });
                if (response.ok) {
                    const data = await response.json();




                    if (data.inwishlist) {
                        wishlistIcon.classList.remove('heart');
                        wishlistIcon.classList.add('heart-fill');
                        
                        Swal.fire({
                        icon: "success",
                        title: data.message || "Product added to wishlist",
                        showConfirmButton: false,
                        timer: 700,
                    })




                    } else {
                        wishlistIcon.classList.remove('heart-fill');
                        wishlistIcon.classList.add('heart');


                        Swal.fire({
                        icon: "success",
                        title: data.message || "Product removed from wishlist",
                        showConfirmButton: false,
                        timer: 700,
                    })
                        



                    }

                    

                } else {
                    const errorData = await response.json();
                    throw new Error(errorData.error || 'Failed to add product to wishlist');
                }
            } else {
                Swal.fire({
                    icon: "warning",
                    title: "Not logged in",
                    text: "Please log in to add products to your wishlist"
                });
            }

        } catch (err) {
            Swal.fire({
                icon: "error",
                title: "can't add product wishlist",
                text: err.message
            });

        }
    }



   


    // Function to handle sorting
    function applySort(sortOption) {
        const urlParams = new URLSearchParams(window.location.search);
        urlParams.set('sort', sortOption);
        window.location.href = `${window.location.pathname}?${urlParams.toString()}`;
    }

    // Function to handle filter panel toggle
    document.getElementById('filter-btn').addEventListener('click', function() {
        var filterPanel = document.getElementById('filter-panel');
        filterPanel.style.display = filterPanel.style.display === 'none' || filterPanel.style.display === '' ? 'block' : 'none';
    });

    document.getElementById('close-filter-panel').addEventListener('click', function() {
        var filterPanel = document.getElementById('filter-panel');
        filterPanel.style.display = 'none';
    });

    </script>

    <%-include ('footer') %>